{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactFilter/ContactFilter.module.css","services/api.js","redux/contacts/contact-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","redux/contacts/contact-actions.js","redux/contacts/contact-types.js","components/ContactFilter/ContactFilter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContacts","a","axios","get","data","addContacts","contact","post","deleteContact","id","delete","defaults","baseURL","addContact","createAsyncThunk","name","number","rejectWithValue","contacts","fetchContactsList","deleteContactsOps","ContactForm","dispatch","useDispatch","useState","setName","setNumber","useSelector","onSubmit","e","preventDefault","some","el","alert","className","s","mainForm","inputContainer","labelName","htmlFor","inputName","onChange","target","value","label","type","pattern","title","required","placeholder","buttonAddContact","ContactsList","filter","state","contactsList","item","toLowerCase","includes","useEffect","mainContainer","ContactList","map","newContact","newContactName","phone","btn","onClick","event","console","log","setFilter","createAction","ContactFilter","actions","App","createReducer","fulfilled","_","action","payload","error","rejected","pending","combineReducers","store","configureStore","reducer","appReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29c5ba24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactList_mainContainer__24gj1\",\"ContactList\":\"ContactList_ContactList__2Ksmw\",\"newContact\":\"ContactList_newContact__2A4lh\",\"newContactName\":\"ContactList_newContactName__vYzEO\",\"btn\":\"ContactList_btn__2qERY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactFilter_mainContainer__3IbFT\",\"inputContainer\":\"ContactFilter_inputContainer__s417g\",\"labelName\":\"ContactFilter_labelName__3XKjI\",\"inputName\":\"ContactFilter_inputName__3KoZ3\",\"buttonAddContact\":\"ContactFilter_buttonAddContact__39JaD\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://61f3d6fb10f0f7001768c69f.mockapi.io';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get('/contacts');\n  return data;\n}\n\nexport async function addContacts(contact) {\n  const { data } = await axios.post('/contacts', contact);\n  return data;\n}\n\nexport async function deleteContact(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n  return data;\n}\n","import { fetchContacts, addContacts, deleteContact } from '../../services/api';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = {\n      name,\n      number,\n    };\n    try {\n      const contacts = await addContacts(contact);\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchContactsList = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const contacts = await fetchContacts();\n    return contacts;\n  },\n);\n\nexport const deleteContactsOps = createAsyncThunk(\n  'contacts/deleteContact',\n  async id => {\n    const contacts = await deleteContact(id);\n    return contacts;\n  },\n);\n","import s from './ContactForm.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contact-operations';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState(null);\n  const contacts = useSelector(data => data.contacts.contacts);\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const onChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        const isIncluded = contacts.some(el => el.name === name);\n\n        if (isIncluded) {\n          alert('This name already exist in your contacts!');\n          return;\n        }\n        dispatch(addContact({ name, number }));\n      }}\n      className={s.mainForm}\n    >\n      <div className={s.inputContainer}>\n        <label className={s.labelName} htmlFor=\"text\">\n          Name\n        </label>\n        <input\n          className={s.inputName}\n          onChange={onChangeName}\n          label=\"last\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter Name\"\n        />\n      </div>\n      <div className={s.inputContainer}>\n        <label className={s.labelName} htmlFor=\"tel\">\n          Number\n        </label>\n        <input\n          className={s.inputName}\n          onChange={onChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter Number\"\n        />\n      </div>\n      <button className={s.buttonAddContact} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './ContactList.module.css';\nimport {\n  fetchContactsList,\n  deleteContactsOps,\n} from '../../redux/contacts/contact-operations';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => {\n    return state.contacts.contacts;\n  });\n\n  const contactsList = contacts.filter(item => {\n    return item.name.toLowerCase().includes(filter.toLowerCase());\n  });\n  fetchContactsList();\n  useEffect(() => dispatch(fetchContactsList()), [dispatch]);\n  return (\n    <div className={s.mainContainer}>\n      <ul>\n        <p className={s.ContactList}>Contact List</p>\n        {contactsList.map(el => {\n          return (\n            <li className={s.newContact} key={el.id}>\n              <p className={s.newContactName}>{el.name + ' : ' + el.phone} </p>\n\n              <button\n                className={s.btn}\n                onClick={event => {\n                  console.log();\n                  dispatch(deleteContactsOps(event.target.id));\n                }}\n                id={el.id}\n                type=\"button\"\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import { createAction } from '@reduxjs/toolkit';\nimport { FILTER_CONTACT } from './contact-types';\n\nexport const setFilter = createAction(FILTER_CONTACT);\n","export const FETCH_CONTACT_REQUEST = 'contacts/fetchContactsRequest';\nexport const FETCH_CONTACT_SUCCESS = 'contacts/fetchContactsSuccess';\nexport const FETCH_CONTACT_ERROR = 'contacts/fetchContactsError';\n\nexport const ADD_CONTACT_REQUEST = 'contacts/addContactRequest';\nexport const ADD_CONTACT_SUCCESS = 'contacts/addContactSuccess';\nexport const ADD_CONTACT_ERROR = 'contacts/addContactError';\n\nexport const DELETE_CONTACT_REQUEST = 'contacts/deleteContactRequest';\nexport const DELETE_CONTACT_SUCCESS = 'contacts/deleteContactSuccess';\nexport const DELETE_CONTACT_ERROR = 'contacts/deleteContactError';\n\nexport const FILTER_CONTACT = 'contacts/filter';\n","/* import { useDispatch } from 'react-redux'\nimport { contactsFilter } from '../../redux/filter/filter-actions'\nimport s from './ContactFilter.module.css'\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch()\n  const onChange = (filter) => dispatch(contactsFilter(filter))\n\n  return (\n    <label className={s.filterInputBox}>\n      <input\n        className={s.filterInput}\n        placeholder=\"Find contacts by name\"\n        type=\"text\"\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </label>\n  )\n} */\n\nimport * as actions from '../../redux/contacts/contact-actions';\nimport { useDispatch } from 'react-redux';\nimport s from './ContactFilter.module.css';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n  return (\n    <div className={s.mainContainer}>\n      <div className={s.inputContainer}>\n        <label className={s.labelName} htmlFor=\"Filter\">\n          Find contact by name\n        </label>\n        <input\n          className={s.inputName}\n          onChange={e => dispatch(actions.setFilter(e.target.value))}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Filter\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactFilter;\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactList/ContactList';\nimport Filter from './components/ContactFilter/ContactFilter';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"sectionTitle\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"sectionTitle\">Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from '../contacts/contact-actions';\nimport {\n  fetchContactsList,\n  deleteContactsOps,\n  addContact,\n} from '../contacts/contact-operations';\n\nconst contacts = createReducer([], {\n  [fetchContactsList.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (state, action) => [...state, action.payload],\n  [deleteContactsOps.fulfilled]: (state, action) => {\n    return state.filter(el => el.id !== action.payload.id);\n  },\n});\n\nconst error = createReducer(null, {\n  [fetchContactsList.rejected]: (_, action) => action.payload,\n  [fetchContactsList.pending]: () => null,\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.pending]: () => null,\n});\n\nconst filter = createReducer('', {\n  [actions.setFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  error,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../redux/contacts/contacts-reducer';\nconst store = configureStore({\n  reducer: {\n    contacts: appReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"ContactForm_mainForm__BCXIh\",\"inputContainer\":\"ContactForm_inputContainer__3cuj9\",\"labelName\":\"ContactForm_labelName__1Uk63\",\"inputName\":\"ContactForm_inputName__3c2Sn\",\"buttonAddContact\":\"ContactForm_buttonAddContact__2wOPO\"};"],"sourceRoot":""}